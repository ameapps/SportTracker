{"version":3,"file":"src_app_menu_food-history_food-history_module_ts.js","mappings":"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","sources":["./src/app/menu/food-history/food-history-routing.module.ts","./src/app/menu/food-history/food-history.component.ts","./src/app/menu/food-history/food-history.module.ts","./src/app/menu/food-history/food-history.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FoodHistoryComponent } from './food-history.component';\n\nconst routes: Routes = [\n  {\n    path:'',\n    component: FoodHistoryComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FoodHistoryRoutingModule { }\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-food-history',\r\n  templateUrl: './food-history.component.html',\r\n  styleUrls: ['./food-history.component.scss'],\r\n})\r\nexport class FoodHistoryComponent {\r\n  foodForm: FormGroup;\r\n\r\n  units = ['Grams', 'Piece', 'Cup', 'Portion'];\r\n  choosenUnit: string;\r\n\r\n  categories = [\r\n    'Fruit',\r\n    'Vegetables',\r\n    'Cereals',\r\n    'Meat',\r\n    'Drinks',\r\n    'Snacks',\r\n    'Other',\r\n  ];\r\n  choosenCategory: string;\r\n\r\n  constructor(private fb: FormBuilder, private router: Router) {\r\n    this.foodForm = this.fb.group({\r\n      name: ['', Validators.required],\r\n      quantity: [null, [Validators.required, Validators.min(0)]],\r\n      unit: ['', Validators.required],\r\n      category: ['', Validators.required],\r\n      calories: [null, [Validators.required, Validators.min(0)]],\r\n      carbs: [null, [Validators.min(0)]],\r\n      proteins: [null, [Validators.min(0)]],\r\n      fats: [null, [Validators.min(0)]],\r\n      fiber: [null, [Validators.min(0)]],\r\n      sugars: [null, [Validators.min(0)]],\r\n      dateTime: [new Date().toISOString(), Validators.required],\r\n    });\r\n\r\n    // Salva il valore selezionato in choosenUnit\r\n    this.foodForm.get('unit')?.valueChanges.subscribe((value) => {\r\n      this.choosenUnit = value;\r\n    });\r\n    // Salva il valore selezionato in choosenCategory\r\n    this.foodForm.get('category')?.valueChanges.subscribe((value) => {\r\n      this.choosenCategory = value;\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.foodForm.valid) {\r\n      // Salva i dati o invia al servizio\r\n      console.log(this.foodForm.value);\r\n      // Reset o navigazione\r\n      this.router.navigate(['/menu/homepage']);\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FoodHistoryRoutingModule } from './food-history-routing.module';\nimport { IonicModule } from '@ionic/angular';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FoodHistoryComponent } from './food-history.component';\n\n@NgModule({\n  declarations: [FoodHistoryComponent], \n  imports: [\n    CommonModule,\n    FoodHistoryRoutingModule,\n    IonicModule,\n    ReactiveFormsModule,\n  ],\n})\nexport class FoodHistoryModule {}\n","export default \"<ion-header [translucent]=\\\"true\\\">\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Register Food</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content [fullscreen]=\\\"true\\\">\\r\\n  <div class=\\\"food-form-container\\\">\\r\\n    <h2>Add Food</h2>\\r\\n    <form [formGroup]=\\\"foodForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Food name</ion-label>\\r\\n        <ion-input formControlName=\\\"name\\\" type=\\\"text\\\" required></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Quantity</ion-label>\\r\\n        <ion-input\\r\\n          formControlName=\\\"quantity\\\"\\r\\n          type=\\\"number\\\"\\r\\n          min=\\\"0\\\"\\r\\n          required\\r\\n        ></ion-input>\\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Unit</ion-label>\\r\\n        <ion-select formControlName=\\\"unit\\\" placeholder=\\\"Unit\\\">\\r\\n          <ion-select-option *ngFor=\\\"let unit of units\\\" [value]=\\\"unit\\\">{{\\r\\n            unit\\r\\n          }}</ion-select-option>\\r\\n        </ion-select>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Category</ion-label>\\r\\n        <ion-select formControlName=\\\"category\\\" required>\\r\\n          <ion-select-option\\r\\n            *ngFor=\\\"let category of categories\\\"\\r\\n            [value]=\\\"category\\\"\\r\\n            >{{ category }}</ion-select-option\\r\\n          >\\r\\n        </ion-select>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Calories (kcal)</ion-label>\\r\\n        <ion-input\\r\\n          formControlName=\\\"calories\\\"\\r\\n          type=\\\"number\\\"\\r\\n          min=\\\"0\\\"\\r\\n          required\\r\\n        ></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"6\\\">\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">Carbohydrates (g)</ion-label>\\r\\n            <ion-input\\r\\n              formControlName=\\\"carbs\\\"\\r\\n              type=\\\"number\\\"\\r\\n              min=\\\"0\\\"\\r\\n            ></ion-input>\\r\\n          </ion-item>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"6\\\">\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">Proteins (g)</ion-label>\\r\\n            <ion-input\\r\\n              formControlName=\\\"proteins\\\"\\r\\n              type=\\\"number\\\"\\r\\n              min=\\\"0\\\"\\r\\n            ></ion-input>\\r\\n          </ion-item>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"6\\\">\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">Fats (g)</ion-label>\\r\\n            <ion-input formControlName=\\\"fats\\\" type=\\\"number\\\" min=\\\"0\\\"></ion-input>\\r\\n          </ion-item>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"6\\\">\\r\\n          <ion-item>\\r\\n            <ion-label position=\\\"floating\\\">Fiber (g)</ion-label>\\r\\n            <ion-input\\r\\n              formControlName=\\\"fiber\\\"\\r\\n              type=\\\"number\\\"\\r\\n              min=\\\"0\\\"\\r\\n            ></ion-input>\\r\\n          </ion-item>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Sugars (g)</ion-label>\\r\\n        <ion-input formControlName=\\\"sugars\\\" type=\\\"number\\\" min=\\\"0\\\"></ion-input>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-item>\\r\\n        <ion-label position=\\\"floating\\\">Date and time</ion-label>\\r\\n        <ion-datetime\\r\\n          formControlName=\\\"dateTime\\\"\\r\\n          display-format=\\\"DD/MM/YYYY HH:mm\\\"\\r\\n        ></ion-datetime>\\r\\n      </ion-item>\\r\\n\\r\\n      <ion-button\\r\\n        expand=\\\"block\\\"\\r\\n        type=\\\"submit\\\"\\r\\n        color=\\\"primary\\\"\\r\\n        [disabled]=\\\"foodForm.invalid\\\"\\r\\n        (click)=\\\"onSubmit()\\\"\\r\\n      >\\r\\n        Save food\\r\\n      </ion-button>\\r\\n    </form>\\r\\n  </div>\\r\\n</ion-content>\\r\\n\";"],"names":[],"sourceRoot":"webpack:///"}